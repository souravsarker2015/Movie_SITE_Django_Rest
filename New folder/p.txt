class ReviewCreate(generics.CreateApiView):
    query_set=Review.objects.all()
    serializer_class=ReviewSerializer

    def perform_create(self,serializer);
        pk=self.kwargs['pk']
        watchlist=WatchList.objects.get(pk=pk)
        review_user=self.request.user

        review_queryset=Review.objects.filter(watchlist=watchlist,review_user=review_user)

        if review_queryset.exits():
            raise ValidationError("You have already reviewed")

        if avg_rating==0:
            watchlist.avg_rating=serializer.validated_data['rating']

        else:
            watchlist.avg_rating=(watchlist.avg_rating + serializer.validated_data)/2
        watchlist.num_rating+=1
        watchlist.save()

        serializer(watchlist=watchlist,review_user=review_user).save()




def review_create(request,pk):
    if request.method=="POST":
        review=Review.objects.get(id=pk)
        watchlist=Watchlist.objects.get(id=pk)
        serializer=ReviewSerializer(review,data=request.data)
        review_user=request.user
        review_queryset=Review.objects.filter(watchlist=watchlist,review_user=review_user)
        if review_queryset.exits():
            raise validationError("You already reviewed")

        if avg_rating==0:
            watchlist.avg_rating=serializer.validated_data['rating']
        else:
            watchlist.avg_rating=(watchlist.avg_rating+serializer.validated_data['rating'])/2
        num_rating=num_rating+1
        watchlist.save()
        serializer(watchlist=watchlist,review_user=review_user)

